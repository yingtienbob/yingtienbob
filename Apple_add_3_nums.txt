'''

Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.
Notice that the solution set must not contain duplicate triplets.

Example 1:

Input: nums = [-1,0,1,2,-1,-4]
Output: [[-1,-1,2],[-1,0,1]]
Explanation: 
nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.
nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.
nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0.
The distinct triplets are [-1,0,1] and [-1,-1,2].
Notice that the order of the output and the order of the triplets does not matter.

'''
print ('Hello World')
def sum3(n3list):
    i=0
    j=0
    k=0
    result = []
    length = len(n3list)
    for i in range(length):
        for j in range(i+1,length):
            for k in range(j+1,length):
                if(n3list[i]+n3list[j]+n3list[k])==0:
                    result.append([i,j,k])
    return result



if __name__== "__main__":
    # TODO: write code...
    arr = [-1,0,1,2,-1,-4]
    print("3 number add=",sum3(arr))